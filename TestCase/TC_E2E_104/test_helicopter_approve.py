#!/usr/bin/env python3
# -*- coding:utf-8 -*-
import random
import os
import string

import pytest
import allure
from selenium.webdriver.common.keys import Keys

from common.readconfig import ini
from page_object.LoginPage import LoginPage
from page.webpage import sleep
from common.readelement import Element
from common.readvalue import ElementValue

flight = Element('flight_104')
flightvalue = ElementValue('flightvalue_104')
accountValue = ElementValue('cad_account')

@allure.feature("TC(E2E)-104 Local Operator Create and Officer Processing Helicopter "
                "(thru Charter Passenger) Application(Approve)")
class TestHelicopterApprove:
    @pytest.fixture(scope='function', autouse=True)
    def open_flight(self, drivers):
        """打开登录页面"""
        login = LoginPage(drivers)
        login.get_url(ini.url)

    @allure.story("create charter passenger helicopter application and approve")
    def test_104(self, drivers):
        login = LoginPage(drivers)
        logout_elements = drivers.find_elements_by_xpath("//i[contains(@class, 'el-icon-caret-bottom')]")
        if len(logout_elements) > 0:
            login.is_click(flight["Logout"])
            login.is_click(flight["Logout_Yes"])
        elements = drivers.find_elements_by_xpath("//button[contains(span,'Login ')]")
        if len(elements) > 0:
            login.input_user_name(accountValue['CpaOfficerLoginName'])
            login.input_user_password(accountValue['CpaOfficerPassword'])
            login.click_login_button()
            sleep(15)

        # 跳转到CreateCharterFlight页面
        login.get_url(ini.url + "#/ApplicationView/CharterFlight/CreateCharterFlight")
        drivers.implicitly_wait(30)
        sleep(3)
        assert drivers.find_element_by_css_selector("h2").text == "Create Charter Passenger Application"

        # step01 开始填写信息[每次测试要更改flightvalue_104.yaml文件里面Flight_No*、Template_Name的值]
        # 填写Basic Information
        login.is_click(flight['Helicopter_Application'])
        login.input_text(flight['Registration_mark'], flightvalue['Registration_Mark'])
        login.is_click(flight['Lease_Aircraft'])
        login.is_click(flight['Aircraft_type_select'])
        login.input_text(flight['Aircraft_type_input'], flightvalue['Aircraft_Type'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[1]/div/div/div[5]/div[1]/div/div/div/div/input").send_keys(Keys.ENTER)
        login.is_click(flight['Aircraft_nationality_select'])
        login.input_text(flight['Aircraft_nationality_input'], flightvalue['Aircraft_Nationality'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[1]/div/div/div[5]/div[2]/div/div/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['Name_of_charterer'], flightvalue['Name_of_Charterer'])
        login.input_text(flight['Address_of_charterer'], flightvalue['Address_of_Charterer'])
        login.is_click(flight['Local_handling_agent_select'])
        login.input_text(flight['Local_handling_agent_input'], flightvalue['Local_Handling_Agent'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[1]/div/div/div[8]/div/div/div[1]/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['Purpose_of_service'], flightvalue['Purpose_of_Service'])
        login.input_text(flight['Points_of_landing'], flightvalue['Points_of_landing'])
        sleep(2)

        # 填写Flight Schedules表格信息
        rl = random.choice(string.ascii_letters)
        # line 1 and line2
        login.is_click(flight['Service_Type_select'])
        login.input_text(flight['Service_Type_input'], flightvalue['Service_Type1'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[1]/td[2]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['From'], flightvalue['Operation_Period_From'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[1]/td[5]/div/span/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['To'], flightvalue['Operation_Period_To'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[1]/td[6]/div/span/div/input").send_keys(Keys.ENTER)
        login.is_click(flight['DOP_1'])
        login.is_click(flight['DOP_3'])
        login.is_click(flight['DOP_5'])
        login.input_text(flight['No_of_Pax'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From'], flightvalue['Port_From1'])
        login.input_text(flight['Port_To'], flightvalue['Port_To1'])
        login.input_text(flight['LocalTime_STA'], flightvalue['Local_Time_STA1'])
        login.input_text(flight['LocalTime_STD'], flightvalue['Local_Time_STD1'])
        login.input_text(flight['Table_Remarks'], flightvalue['Table_Remarks'] + "1")

        login.is_click(flight['Service_Type_select_2'])
        login.input_text(flight['Service_Type_input_2'], flightvalue['Service_Type1'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[2]/td[1]/div/span/div/div[1]/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_2'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['No_of_Pax_2'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_2'], flightvalue['Port_To1'])
        login.input_text(flight['Port_To_2'], flightvalue['Port_From1'])
        login.input_text(flight['LocalTime_STA_2'], flightvalue['Local_Time_STA2'])
        login.input_text(flight['LocalTime_STD_2'], flightvalue['Local_Time_STD2'])
        login.input_text(flight['Table_Remarks_2'], flightvalue['Table_Remarks'] + "2")

        # line 3 and line4
        login.is_click(flight['Service_Type_select_3'])
        login.input_text(flight['Service_Type_input_3'], flightvalue['Service_Type2'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[3]/td[2]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_3'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['From_3'], flightvalue['Operation_Period_From'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[3]/td[5]/div/span/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['To_3'], flightvalue['Operation_Period_To'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[3]/td[6]/div/span/div/input").send_keys(Keys.ENTER)
        login.is_click(flight['DOP_1_3'])
        login.is_click(flight['DOP_3_3'])
        login.is_click(flight['DOP_5_3'])
        login.is_click(flight['DOP_7_3'])
        login.input_text(flight['No_of_Pax_3'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_3'], flightvalue['Port_From2'])
        login.input_text(flight['Port_To_3'], flightvalue['Port_To2'])
        login.input_text(flight['LocalTime_STA_3'], flightvalue['Local_Time_STA1'])
        login.input_text(flight['LocalTime_STD_3'], flightvalue['Local_Time_STD1'])
        login.input_text(flight['Table_Remarks_3'], flightvalue['Table_Remarks'] + "3")

        login.is_click(flight['Service_Type_select_4'])
        login.input_text(flight['Service_Type_input_4'], flightvalue['Service_Type2'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[4]/td[1]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_4'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['No_of_Pax_4'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_4'], flightvalue['Port_To2'])
        login.input_text(flight['Port_To_4'], flightvalue['Port_From2'])
        login.input_text(flight['LocalTime_STA_4'], flightvalue['Local_Time_STA2'])
        login.input_text(flight['LocalTime_STD_4'], flightvalue['Local_Time_STD2'])
        login.input_text(flight['Table_Remarks_4'], flightvalue['Table_Remarks'] + "4")

        # #line 5 and line6
        login.is_click(flight['Service_Type_select_5'])
        login.input_text(flight['Service_Type_input_5'], flightvalue['Service_Type3'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[5]/td[2]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_5'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['From_5'], flightvalue['Operation_Period_From'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[5]/td[5]/div/span/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['To_5'], flightvalue['Operation_Period_To'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[5]/td[6]/div/span/div/input").send_keys(Keys.ENTER)
        login.is_click(flight['DOP_2_5'])
        login.is_click(flight['DOP_4_5'])
        login.is_click(flight['DOP_6_5'])
        login.input_text(flight['No_of_Pax_5'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_5'], flightvalue['Port_From3'])
        login.input_text(flight['Port_To_5'], flightvalue['Port_To3'])
        login.input_text(flight['LocalTime_STA_5'], flightvalue['Local_Time_STA1'])
        login.input_text(flight['LocalTime_STD_5'], flightvalue['Local_Time_STD1'])
        login.input_text(flight['Table_Remarks_5'], flightvalue['Table_Remarks'] + "5")

        login.is_click(flight['Service_Type_select_6'])
        login.input_text(flight['Service_Type_input_6'], flightvalue['Service_Type3'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[6]/td[1]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_6'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.is_click(flight['In_Out_Diff_select_6'])
        login.input_text(flight['In_Out_Diff_input_6'], "+1")
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[6]/td[3]/div/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['No_of_Pax_6'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_6'], flightvalue['Port_To3'])
        login.input_text(flight['Port_To_6'], flightvalue['Port_From3'])
        login.input_text(flight['LocalTime_STA_6'], flightvalue['Local_Time_STA2'])
        login.input_text(flight['LocalTime_STD_6'], flightvalue['Local_Time_STD2'])
        login.input_text(flight['Table_Remarks_6'], flightvalue['Table_Remarks'] + "6")

        # #line 7 and line8
        login.is_click(flight['Service_Type_select_7'])
        login.input_text(flight['Service_Type_input_7'], flightvalue['Service_Type1'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[7]/td[2]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_7'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['From_7'], flightvalue['Operation_Period_From'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[7]/td[5]/div/span/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['To_7'], flightvalue['Operation_Period_To'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[7]/td[6]/div/span/div/input").send_keys(Keys.ENTER)
        login.is_click(flight['DOP_1_7'])
        login.is_click(flight['DOP_3_7'])
        login.is_click(flight['DOP_5_7'])
        login.input_text(flight['No_of_Pax_7'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_7'], flightvalue['Port_From4'])
        login.input_text(flight['Port_To_7'], flightvalue['Port_To4'])
        login.input_text(flight['LocalTime_STA_7'], flightvalue['Local_Time_STA1'])
        login.input_text(flight['LocalTime_STD_7'], flightvalue['Local_Time_STD1'])
        login.input_text(flight['Table_Remarks_7'], flightvalue['Table_Remarks'] + "7")

        login.is_click(flight['Service_Type_select_8'])
        login.input_text(flight['Service_Type_input_8'], flightvalue['Service_Type2'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[8]/td[1]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_8'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['No_of_Pax_8'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_8'], flightvalue['Port_To4'])
        login.input_text(flight['Port_To_8'], flightvalue['Port_From4'])
        login.input_text(flight['LocalTime_STA_8'], flightvalue['Local_Time_STA2'])
        login.input_text(flight['LocalTime_STD_8'], flightvalue['Local_Time_STD2'])
        login.input_text(flight['Table_Remarks_8'], flightvalue['Table_Remarks'] + "8")

        # #line 9 and line10
        login.is_click(flight['Service_Type_select_9'])
        login.input_text(flight['Service_Type_input_9'], flightvalue['Service_Type1'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[9]/td[2]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_9'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['From_9'], flightvalue['Operation_Period_From'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[9]/td[5]/div/span/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['To_9'], flightvalue['Operation_Period_To'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[9]/td[6]/div/span/div/input").send_keys(Keys.ENTER)
        login.is_click(flight['DOP_2_9'])
        login.is_click(flight['DOP_4_9'])
        login.input_text(flight['No_of_Pax_9'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_9'], flightvalue['Port_From5'])
        login.input_text(flight['Port_To_9'], flightvalue['Port_To5'])
        login.input_text(flight['LocalTime_STA_9'], flightvalue['Local_Time_STA1'])
        login.input_text(flight['LocalTime_STD_9'], flightvalue['Local_Time_STD1'])
        login.input_text(flight['Table_Remarks_9'], flightvalue['Table_Remarks'] + "9")

        login.is_click(flight['Service_Type_select_10'])
        login.input_text(flight['Service_Type_input_10'], flightvalue['Service_Type3'])
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[3]/div/div[3]/table/tbody/tr[10]/td[1]/div/span/div/div/input").send_keys(Keys.ENTER)
        login.input_text(flight['FlightNo_10'], "CPA" + str(random.randint(1000, 9999)) + rl)
        login.input_text(flight['No_of_Pax_10'], flightvalue['No_of_Pax'])
        login.input_text(flight['Port_From_10'], flightvalue['Port_To5'])
        login.input_text(flight['Port_To_10'], flightvalue['Port_From5'])
        login.input_text(flight['LocalTime_STA_10'], flightvalue['Local_Time_STA2'])
        login.input_text(flight['LocalTime_STD_10'], flightvalue['Local_Time_STD2'])
        login.input_text(flight['Table_Remarks_10'], flightvalue['Table_Remarks'] + "10")

        login.input_text(flight['Remarks'], flightvalue['Remarks'])
        sleep(2)

        # Upload file
        login.is_click(flight['Upload_Related_Documents'])
        sleep(2)
        login.is_click(flight['Doc_Type_Select'])
        login.input_text(flight['Doc_Type_Input'], flightvalue['Document_Type_Others'])
        sleep(2)
        drivers.find_element_by_xpath("//*[@id='testNewDocumentUpload']").send_keys(Keys.ENTER)
        sleep(2)
        current_path = os.path.abspath(__file__)
        file_path = os.path.dirname(current_path) + "/TestFile/sample_file.pdf"
        drivers.find_element_by_xpath("//input[@type ='file']").send_keys(file_path)
        sleep(3)

        login.is_click(flight['Indefinite'])
        sleep(3)
        login.is_click(flight['UploadButton'])
        sleep(3)
        login.is_click(flight['Click_Condition'])

        # step 02 Click "Save as Draft"
        login.is_click(flight['Save_AS_Draft'])
        sleep(2)
        # step 03
        login.is_click(flight['Save_AS_Template'])
        sleep(3)
        tem = "Template zjTest" + str(random.uniform(1, 1000))
        sleep(3)
        login.input_text(flight['Template_Name'], tem)
        sleep(3)
        login.input_text(flight['Template_Description'], flightvalue['Template_Description'])
        sleep(3)
        login.is_click(flight['Template_Save'])
        sleep(3)
        # step 04
        login.is_click(flight['Preview_And_Submit'])
        sleep(3)
        # step 05 Print
        # step 06
        login.is_click(flight['Back_And_Modify'])
        sleep(2)
        login.is_click(flight['Preview_And_Submit'])
        sleep(2)
        # step 07
        login.is_click(flight['Click_Submit'])
        sleep(8)
        # step 08、step 09
        # step 10
        login.is_click(flight['Click_NO_01'])
        sleep(5)

        # 从CPATEST03用户到 Officer1用户切换
        login.is_click(flight["Logout"])
        login.is_click(flight["Logout_Yes"])
        login.input_user_name(accountValue['OfficerLoginName'])
        login.input_user_password(accountValue['OfficerPassword'])
        login.click_login_button()
        sleep(15)

        # step 11 ~ step 13 + step 22
        login.get_url(ini.url + "#/View/Messages")
        sleep(3)
        login.is_click(flight['Advanced_Search'])
        login.input_text(flight['Sender'], accountValue['CpaOfficerLoginName'])
        login.is_click(flight['Charter_Passenger'])
        login.is_click(flight['Search'])
        sleep(2)
        # login.is_click(flight['Open_Message'])
        login.is_click(flight['Message_Ref_No'])
        sleep(6)
        # step 14 ~ step 21 TS Officer
        # optional step 23 ~ 34 skip
        # login.is_click(flight['Modify_Button'])
        # sleep(2)
        # login.is_click(flight['Save_Button'])
        # sleep(2)
        # login.is_click(flight['Record_Save'])
        # sleep(2)
        # login.is_click(flight['Select_Flight_Schedule'])
        # sleep(2)
        # login.is_click(flight['Modify_Flight_Schedule'])
        # sleep(2)
        # login.input_text(flight['Modify_Remarks1'], flightvalue['Modify_Remarks'] + "1")
        # sleep(2)
        # login.input_text(flight['Modify_Remarks2'], flightvalue['Modify_Remarks'] + "1")
        # sleep(2)
        # login.is_click(flight['Save_Flight_Schedule'])
        # sleep(2)

        login.is_click(flight['Upload_Button'])
        sleep(5)
        login.is_click(flight['Lease_Aircraft_Button'])
        sleep(5)
        login.is_click(flight['Upload_Document_Lessor_Operator_Select'])
        sleep(2)
        login.input_text(flight['Upload_Document_Lessor_Operator_Input'], flightvalue['Lessor_Operator_ICAO'])
        sleep(2)
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/div[13]/div[1]/div/div[2]/form/div[6]/div[1]/div/div/div/div[1]/input").send_keys(Keys.ENTER)
        sleep(2)
        login.is_click(flight['Upload_Document_Type_Select'])
        sleep(2)
        login.input_text(flight['Upload_Document_Type_Input'], flightvalue['Document_Type'])
        sleep(2)
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/div[13]/div[1]/div/div[2]/form/div[7]/div/div/div/div/div/div[1]/input").send_keys(Keys.ENTER)
        sleep(2)
        login.input_text(flight['Upload_Document_Registration_Mark'], flightvalue['Registration_Mark2'])
        sleep(2)
        login.is_click(flight['Upload_Document_Aircraft_Type_Select'])
        sleep(2)
        login.input_text(flight['Upload_Document_Aircraft_Type_Input'], flightvalue['Aircraft_Type2'])
        sleep(2)
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/div[13]/div[1]/div/div[2]/form/div[8]/div[2]/div/div/div/div[1]/input").send_keys(Keys.ENTER)
        sleep(2)
        login.input_text(flight['Upload_Document_Expiry_Date_Input'], flightvalue['Expiry_Date'])
        sleep(2)
        drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/div[13]/div[1]/div/div[2]/form/div[9]/div/div/div/div/input").send_keys(Keys.ENTER)
        sleep(2)
        login.input_text(flight['Upload_Document_Enclosure'], flightvalue['Enclosure_Reference'])
        sleep(2)
        login.input_text(flight['Upload_Document_Remarks'], flightvalue['Remarks2'])
        sleep(2)
        login.is_click(flight['Upload_Click'])
        sleep(2)
        login.is_click(flight['Upload_Click_OK'])
        sleep(2)

        login.is_click(flight['Select_From_Document_Library_Button'])
        sleep(2)
        login.is_click(flight['Select_From_Document_Library_Confirm'])
        sleep(2)
        login.is_click(flight['Upload_Application_related_Document_Button'])
        sleep(2)
        login.is_click(flight['New_Doc_Type_Select'])
        login.input_text(flight['New_Doc_Type_Input'], flightvalue['Document_Type_Others'])
        sleep(1)
        drivers.find_element_by_xpath("//*[@id='testNewDocumentUpload']").send_keys(Keys.ENTER)
        sleep(1)
        current_path = os.path.abspath(__file__)
        file_path = os.path.dirname(current_path) + "/TestFile/other_supports.pdf"
        drivers.find_element_by_xpath("/html/body/div[7]/div/div[2]/form/div[1]/div/div/div/span/div[2]/div/div/input").send_keys(file_path)
        sleep(2)
        login.is_click(flight['New_Indefinite'])
        sleep(2)
        login.is_click(flight['Upload_Application_related_Document_Upload'])
        sleep(2)

        login.is_click(flight['View_Uploaded_Documents'])
        sleep(5)
        login.is_click(flight['View_Uploaded_Documents_Close'])
        sleep(2)
        login.is_click(flight['CAD_Remarks'])
        sleep(2)
        login.input_text(flight['CAD_Remarks_Text'], flightvalue['CAD_Remarks'])
        sleep(1)

        # step 35
        login.is_click(flight['Approve'])
        sleep(2)
        # step 36
        login.is_click(flight['Approve_Proceed'])
        sleep(5)
        # step 37
        login.is_click(flight['Generate'])
        sleep(20)
        # step 38
        login.is_click(flight['Generate_And_Edit'])
        sleep(10)
        login.input_text(flight['Template_Office_Phone_No'], flightvalue['Office_Phone_No'])
        login.input_text(flight['Template_Fax_No'], flightvalue['Office_Fax_No'])
        login.input_text(flight['Template_User_Name'], flightvalue['User_Name'])
        login.input_text(flight['Template_Post'], flightvalue['Post'])
        login.input_text(flight['Template_Address1'], flightvalue['Address1'])
        login.input_text(flight['Template_Address2'], flightvalue['Address2'])
        login.input_text(flight['Template_Address3'], flightvalue['Address3'])
        login.input_text(flight['Template_Signed_Area'], flightvalue['Signed_Area'])
        login.input_text(flight['Template_Ferry'], flightvalue['Ferry'])
        login.is_click(flight['Template_RefreshPreview'])
        sleep(2)
        login.is_click(flight['Template_Download_As_Word'])
        sleep(2)
        login.is_click(flight['Template_Generate_PDF'])
        sleep(15)
        # step 39
        # login.is_click(flight['Send_By_Email'])
        login.is_click(flight['Send_Letter'])
        sleep(10)
        resultText = login.element_text(flight['Send_letter_failed_Text'])
        if resultText == 'Failed to send an external email. Procedure.':
            # send 失败
            login.is_click(flight['Send_Letter_failed_ok'])
            login.is_click(flight['Discard'])
            login.is_click(flight['Yes_After_Discard'])
            sleep(3)
        else:
            # send 成功   'Email has been sent.'
            login.is_click(flight['Send_letter_Close'])
            sleep(3)

        # 从 Officer1 用户到 CPATEST03 用户切换
        login.is_click(flight["Logout"])
        login.is_click(flight["Logout_Yes"])
        login.input_user_name(accountValue['CpaOfficerLoginName'])
        login.input_user_password(accountValue['CpaOfficerPassword'])
        login.click_login_button()
        sleep(15)

        # step 40 ~ step 43
        login.get_url(ini.url + "#/View/Messages")
        sleep(3)
        login.is_click(flight['CPA_Advanced_Search'])
        login.input_text(flight['CPA_Sender'], accountValue['OfficerLoginName'])
        login.is_click(flight['CPA_Charter_Passenger'])
        login.is_click(flight['CPA_Search'])
        sleep(2)
        # login.is_click(flight['CPA_Open_Message'])
        login.is_click(flight['Message_Ref_No'])
        sleep(6)

        # step 44 ~ step 45
        # login.get_url(ini.url + "#/View/FlightSchedule")
        # sleep(3)
        # login.is_click(flight['Aircraft_Category_Helicopter'])
        # login.is_click(flight['Exclude_TSFerry'])
        # login.input_text(flight['EffectiveOperation_Period_From'], flightvalue['Operation_Period_From'])
        # drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[5]/div/div/div/div[1]/input").send_keys(Keys.ENTER)
        # login.input_text(flight['EffectiveOperation_Period_To'], flightvalue['Operation_Period_To'])
        # sleep(5)
        # drivers.find_element_by_xpath("//*[@id='app']/div/div/section/div/form/div[5]/div/div/div/div[2]/input").send_keys(Keys.ENTER)
        # sleep(5)
        # login.is_click(flight["SFS_Service_Type_Charter_Pax"])
        # sleep(5)
        # login.is_click(flight["SFS_Service_Type_Ferry"])
        # sleep(5)
        # login.is_click(flight["SFS_Service_Type_Medical"])
        # sleep(5)
        # login.is_click(flight["SFS_Search"])
        # sleep(120)
        # login.is_click(flight["Total_Pages"])
        # sleep(60)

        login.is_click(flight["Logout"])
        login.is_click(flight["Logout_Yes"])

if __name__ == '__main__':
    pytest.main(['TestCase/TC_E2E_104/test_helicopter_approve.py'])
